# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'designer/main.ui'
#

#      by: PyQt4 UI code generator 4.4.2
#
# WARNING! All changes made in this file will be lost!

from PyQt4 import QtCore, QtGui

class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(543,400)
        sizePolicy = QtGui.QSizePolicy(QtGui.QSizePolicy.Preferred,QtGui.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(MainWindow.sizePolicy().hasHeightForWidth())
        MainWindow.setSizePolicy(sizePolicy)
        icon = QtGui.QIcon()
        icon.addFile(":/icons/anki.png")
        MainWindow.setWindowIcon(icon)
        self.centralwidget = QtGui.QWidget(MainWindow)
        sizePolicy = QtGui.QSizePolicy(QtGui.QSizePolicy.MinimumExpanding,QtGui.QSizePolicy.MinimumExpanding)
        sizePolicy.setHorizontalStretch(1)
        sizePolicy.setVerticalStretch(1)
        sizePolicy.setHeightForWidth(self.centralwidget.sizePolicy().hasHeightForWidth())
        self.centralwidget.setSizePolicy(sizePolicy)
        self.centralwidget.setAutoFillBackground(True)
        self.centralwidget.setObjectName("centralwidget")
        self.hboxlayout = QtGui.QHBoxLayout(self.centralwidget)
        self.hboxlayout.setSpacing(0)
        self.hboxlayout.setMargin(0)
        self.hboxlayout.setObjectName("hboxlayout")
        self.mainTextFrame = QtGui.QFrame(self.centralwidget)
        palette = QtGui.QPalette()
        brush = QtGui.QBrush(QtGui.QColor(255,255,255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active,QtGui.QPalette.Base,brush)
        brush = QtGui.QBrush(QtGui.QColor(255,255,255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active,QtGui.QPalette.Window,brush)
        brush = QtGui.QBrush(QtGui.QColor(255,255,255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive,QtGui.QPalette.Base,brush)
        brush = QtGui.QBrush(QtGui.QColor(255,255,255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive,QtGui.QPalette.Window,brush)
        brush = QtGui.QBrush(QtGui.QColor(255,255,255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled,QtGui.QPalette.Base,brush)
        brush = QtGui.QBrush(QtGui.QColor(255,255,255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled,QtGui.QPalette.Window,brush)
        self.mainTextFrame.setPalette(palette)
        self.mainTextFrame.setAutoFillBackground(True)
        self.mainTextFrame.setFrameShape(QtGui.QFrame.NoFrame)
        self.mainTextFrame.setFrameShadow(QtGui.QFrame.Raised)
        self.mainTextFrame.setObjectName("mainTextFrame")
        self.vboxlayout = QtGui.QVBoxLayout(self.mainTextFrame)
        self.vboxlayout.setSpacing(0)
        self.vboxlayout.setMargin(5)
        self.vboxlayout.setObjectName("vboxlayout")
        self.mainText = QtGui.QTextBrowser(self.mainTextFrame)
        sizePolicy = QtGui.QSizePolicy(QtGui.QSizePolicy.MinimumExpanding,QtGui.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.mainText.sizePolicy().hasHeightForWidth())
        self.mainText.setSizePolicy(sizePolicy)
        self.mainText.setMinimumSize(QtCore.QSize(0,100))
        self.mainText.setFocusPolicy(QtCore.Qt.ClickFocus)
        self.mainText.setFrameShape(QtGui.QFrame.NoFrame)
        self.mainText.setTabChangesFocus(False)
        self.mainText.setReadOnly(True)
        self.mainText.setTextInteractionFlags(QtCore.Qt.TextBrowserInteraction)
        self.mainText.setOpenExternalLinks(False)
        self.mainText.setObjectName("mainText")
        self.vboxlayout.addWidget(self.mainText)
        self.buttonWidget = QtGui.QWidget(self.mainTextFrame)
        self.buttonWidget.setObjectName("buttonWidget")
        self.vboxlayout.addWidget(self.buttonWidget)
        self.hboxlayout.addWidget(self.mainTextFrame)
        self.helpFrame = QtGui.QFrame(self.centralwidget)
        self.helpFrame.setFrameShape(QtGui.QFrame.NoFrame)
        self.helpFrame.setFrameShadow(QtGui.QFrame.Raised)
        self.helpFrame.setObjectName("helpFrame")
        self.hboxlayout1 = QtGui.QHBoxLayout(self.helpFrame)
        self.hboxlayout1.setSpacing(0)
        self.hboxlayout1.setMargin(0)
        self.hboxlayout1.setObjectName("hboxlayout1")
        self.line = QtGui.QFrame(self.helpFrame)
        self.line.setFrameShape(QtGui.QFrame.VLine)
        self.line.setFrameShadow(QtGui.QFrame.Sunken)
        self.line.setObjectName("line")
        self.hboxlayout1.addWidget(self.line)
        self.innerHelpFrame = QtGui.QFrame(self.helpFrame)
        palette = QtGui.QPalette()
        brush = QtGui.QBrush(QtGui.QColor(255,255,255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active,QtGui.QPalette.Base,brush)
        brush = QtGui.QBrush(QtGui.QColor(255,250,230))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active,QtGui.QPalette.Window,brush)
        brush = QtGui.QBrush(QtGui.QColor(255,255,255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive,QtGui.QPalette.Base,brush)
        brush = QtGui.QBrush(QtGui.QColor(255,250,230))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive,QtGui.QPalette.Window,brush)
        brush = QtGui.QBrush(QtGui.QColor(255,250,230))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled,QtGui.QPalette.Base,brush)
        brush = QtGui.QBrush(QtGui.QColor(207,207,207))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled,QtGui.QPalette.Window,brush)
        self.innerHelpFrame.setPalette(palette)
        self.innerHelpFrame.setAutoFillBackground(True)
        self.innerHelpFrame.setFrameShape(QtGui.QFrame.NoFrame)
        self.innerHelpFrame.setFrameShadow(QtGui.QFrame.Raised)
        self.innerHelpFrame.setObjectName("innerHelpFrame")
        self.hboxlayout2 = QtGui.QHBoxLayout(self.innerHelpFrame)
        self.hboxlayout2.setSpacing(6)
        self.hboxlayout2.setMargin(9)
        self.hboxlayout2.setObjectName("hboxlayout2")
        self.help = QtGui.QTextBrowser(self.innerHelpFrame)
        self.help.setEnabled(True)
        sizePolicy = QtGui.QSizePolicy(QtGui.QSizePolicy.Fixed,QtGui.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.help.sizePolicy().hasHeightForWidth())
        self.help.setSizePolicy(sizePolicy)
        self.help.setMinimumSize(QtCore.QSize(200,0))
        self.help.setMaximumSize(QtCore.QSize(300,16777215))
        palette = QtGui.QPalette()
        brush = QtGui.QBrush(QtGui.QColor(255,250,230))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active,QtGui.QPalette.Base,brush)
        brush = QtGui.QBrush(QtGui.QColor(255,250,230))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive,QtGui.QPalette.Base,brush)
        brush = QtGui.QBrush(QtGui.QColor(207,207,207))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled,QtGui.QPalette.Base,brush)
        self.help.setPalette(palette)
        self.help.setFrameShape(QtGui.QFrame.NoFrame)
        self.help.setFrameShadow(QtGui.QFrame.Sunken)
        self.help.setHorizontalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOff)
        self.help.setObjectName("help")
        self.hboxlayout2.addWidget(self.help)
        self.hboxlayout1.addWidget(self.innerHelpFrame)
        self.hboxlayout.addWidget(self.helpFrame)
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtGui.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0,0,543,27))
        self.menubar.setObjectName("menubar")
        self.menuHelp = QtGui.QMenu(self.menubar)
        self.menuHelp.setObjectName("menuHelp")
        self.menuEdit = QtGui.QMenu(self.menubar)
        self.menuEdit.setObjectName("menuEdit")
        self.menuDeck = QtGui.QMenu(self.menubar)
        self.menuDeck.setObjectName("menuDeck")
        self.menuOpenRecent = QtGui.QMenu(self.menuDeck)
        self.menuOpenRecent.setObjectName("menuOpenRecent")
        self.menuTools = QtGui.QMenu(self.menubar)
        self.menuTools.setObjectName("menuTools")
        self.menu_Lookup = QtGui.QMenu(self.menuTools)
        self.menu_Lookup.setObjectName("menu_Lookup")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtGui.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)
        self.toolBar = QtGui.QToolBar(MainWindow)
        self.toolBar.setEnabled(True)
        self.toolBar.setOrientation(QtCore.Qt.Horizontal)
        self.toolBar.setObjectName("toolBar")
        MainWindow.addToolBar(QtCore.Qt.TopToolBarArea,self.toolBar)
        self.actionExit = QtGui.QAction(MainWindow)
        icon = QtGui.QIcon()
        icon.addFile(":/icons/exit.png")
        self.actionExit.setIcon(icon)
        self.actionExit.setObjectName("actionExit")
        self.actionNew = QtGui.QAction(MainWindow)
        icon = QtGui.QIcon()
        icon.addFile(":/icons/filenew.png")
        self.actionNew.setIcon(icon)
        self.actionNew.setObjectName("actionNew")
        self.actionOpen = QtGui.QAction(MainWindow)
        icon = QtGui.QIcon()
        icon.addFile(":/icons/fileopen.png")
        self.actionOpen.setIcon(icon)
        self.actionOpen.setObjectName("actionOpen")
        self.actionClose = QtGui.QAction(MainWindow)
        icon = QtGui.QIcon()
        icon.addFile(":/icons/fileclose.png")
        self.actionClose.setIcon(icon)
        self.actionClose.setObjectName("actionClose")
        self.actionSave = QtGui.QAction(MainWindow)
        icon = QtGui.QIcon()
        icon.addFile(":/icons/filesave.png")
        self.actionSave.setIcon(icon)
        self.actionSave.setObjectName("actionSave")
        self.actionSyncdeck = QtGui.QAction(MainWindow)
        icon = QtGui.QIcon()
        icon.addFile(":/icons/multisynk.png")
        self.actionSyncdeck.setIcon(icon)
        self.actionSyncdeck.setObjectName("actionSyncdeck")
        self.actionAddcards = QtGui.QAction(MainWindow)
        icon = QtGui.QIcon()
        icon.addFile(":/icons/add.png")
        self.actionAddcards.setIcon(icon)
        self.actionAddcards.setObjectName("actionAddcards")
        self.actionEditdeck = QtGui.QAction(MainWindow)
        icon = QtGui.QIcon()
        icon.addFile(":/icons/view_text.png")
        self.actionEditdeck.setIcon(icon)
        self.actionEditdeck.setObjectName("actionEditdeck")
        self.actionPreferences = QtGui.QAction(MainWindow)
        icon = QtGui.QIcon()
        icon.addFile(":/icons/configure.png")
        self.actionPreferences.setIcon(icon)
        self.actionPreferences.setObjectName("actionPreferences")
        self.actionLookup_expr = QtGui.QAction(MainWindow)
        self.actionLookup_expr.setObjectName("actionLookup_expr")
        self.actionLookup_mean = QtGui.QAction(MainWindow)
        self.actionLookup_mean.setObjectName("actionLookup_mean")
        self.actionLookup_as = QtGui.QAction(MainWindow)
        self.actionLookup_as.setObjectName("actionLookup_as")
        self.actionLookup_es = QtGui.QAction(MainWindow)
        self.actionLookup_es.setObjectName("actionLookup_es")
        self.actionLookup_esk = QtGui.QAction(MainWindow)
        self.actionLookup_esk.setObjectName("actionLookup_esk")
        self.actionKstats = QtGui.QAction(MainWindow)
        icon = QtGui.QIcon()
        icon.addFile(":/icons/kanji.png")
        self.actionKstats.setIcon(icon)
        self.actionKstats.setObjectName("actionKstats")
        self.actionDstats = QtGui.QAction(MainWindow)
        icon = QtGui.QIcon()
        icon.addFile(":/icons/spreadsheet.png")
        self.actionDstats.setIcon(icon)
        self.actionDstats.setObjectName("actionDstats")
        self.actionStarthere = QtGui.QAction(MainWindow)
        icon = QtGui.QIcon()
        icon.addFile(":/icons/help.png")
        self.actionStarthere.setIcon(icon)
        self.actionStarthere.setObjectName("actionStarthere")
        self.actionReportbug = QtGui.QAction(MainWindow)
        self.actionReportbug.setObjectName("actionReportbug")
        self.actionAbout = QtGui.QAction(MainWindow)
        icon = QtGui.QIcon()
        icon.addFile(":/icons/anki.png")
        self.actionAbout.setIcon(icon)
        self.actionAbout.setObjectName("actionAbout")
        self.actionCstats = QtGui.QAction(MainWindow)
        icon = QtGui.QIcon()
        icon.addFile(":/icons/package_games_card.png")
        self.actionCstats.setIcon(icon)
        self.actionCstats.setObjectName("actionCstats")
        self.actionDeckProperties = QtGui.QAction(MainWindow)
        icon = QtGui.QIcon()
        icon.addFile(":/icons/contents.png")
        self.actionDeckProperties.setIcon(icon)
        self.actionDeckProperties.setObjectName("actionDeckProperties")
        self.actionImport = QtGui.QAction(MainWindow)
        icon = QtGui.QIcon()
        icon.addFile(":/icons/fileimport.png")
        self.actionImport.setIcon(icon)
        self.actionImport.setObjectName("actionImport")
        self.actionGraphs = QtGui.QAction(MainWindow)
        icon = QtGui.QIcon()
        icon.addFile(":/icons/colorscm.png")
        self.actionGraphs.setIcon(icon)
        self.actionGraphs.setObjectName("actionGraphs")
        self.actionExport = QtGui.QAction(MainWindow)
        icon = QtGui.QIcon()
        icon.addFile(":/icons/compfile.png")
        self.actionExport.setIcon(icon)
        self.actionExport.setObjectName("actionExport")
        self.actionDisplayProperties = QtGui.QAction(MainWindow)
        icon = QtGui.QIcon()
        icon.addFile(":/icons/fonts.png")
        self.actionDisplayProperties.setIcon(icon)
        self.actionDisplayProperties.setObjectName("actionDisplayProperties")
        self.actionOpenSamples = QtGui.QAction(MainWindow)
        self.actionOpenSamples.setObjectName("actionOpenSamples")
        self.actionMarkCard = QtGui.QAction(MainWindow)
        self.actionMarkCard.setCheckable(True)
        icon = QtGui.QIcon()
        icon.addFile(":/icons/bookmark.png")
        self.actionMarkCard.setIcon(icon)
        self.actionMarkCard.setObjectName("actionMarkCard")
        self.actionSuspendCard = QtGui.QAction(MainWindow)
        icon = QtGui.QIcon()
        icon.addFile(":/icons/player_pause.png")
        self.actionSuspendCard.setIcon(icon)
        self.actionSuspendCard.setObjectName("actionSuspendCard")
        self.actionModelProperties = QtGui.QAction(MainWindow)
        icon = QtGui.QIcon()
        icon.addFile(":/icons/kpersonalizer.png")
        self.actionModelProperties.setIcon(icon)
        self.actionModelProperties.setObjectName("actionModelProperties")
        self.actionRepeatQuestionAudio = QtGui.QAction(MainWindow)
        self.actionRepeatQuestionAudio.setObjectName("actionRepeatQuestionAudio")
        self.actionRepeatAnswerAudio = QtGui.QAction(MainWindow)
        self.actionRepeatAnswerAudio.setObjectName("actionRepeatAnswerAudio")
        self.actionRepeatAudio = QtGui.QAction(MainWindow)
        self.actionRepeatAudio.setEnabled(False)
        icon = QtGui.QIcon()
        icon.addFile(":/icons/player_play.png")
        self.actionRepeatAudio.setIcon(icon)
        self.actionRepeatAudio.setObjectName("actionRepeatAudio")
        self.actionUndoAnswer = QtGui.QAction(MainWindow)
        self.actionUndoAnswer.setEnabled(False)
        icon = QtGui.QIcon()
        icon.addFile(":/icons/undo.png")
        self.actionUndoAnswer.setIcon(icon)
        self.actionUndoAnswer.setObjectName("actionUndoAnswer")
        self.actionForum = QtGui.QAction(MainWindow)
        self.actionForum.setObjectName("actionForum")
        self.actionSaveAs = QtGui.QAction(MainWindow)
        icon = QtGui.QIcon()
        icon.addFile(":/icons/filesave.png")
        self.actionSaveAs.setIcon(icon)
        self.actionSaveAs.setObjectName("actionSaveAs")
        self.menuHelp.addAction(self.actionStarthere)
        self.menuHelp.addSeparator()
        self.menuHelp.addAction(self.actionReportbug)
        self.menuHelp.addAction(self.actionForum)
        self.menuHelp.addSeparator()
        self.menuHelp.addAction(self.actionAbout)
        self.menuHelp.addSeparator()
        self.menuEdit.addAction(self.actionUndoAnswer)
        self.menuEdit.addSeparator()
        self.menuEdit.addAction(self.actionAddcards)
        self.menuEdit.addAction(self.actionEditdeck)
        self.menuEdit.addSeparator()
        self.menuEdit.addAction(self.actionDisplayProperties)
        self.menuEdit.addAction(self.actionModelProperties)
        self.menuEdit.addAction(self.actionDeckProperties)
        self.menuEdit.addSeparator()
        self.menuEdit.addAction(self.actionPreferences)
        self.menuEdit.addSeparator()
        self.menuDeck.addAction(self.actionNew)
        self.menuDeck.addAction(self.actionOpen)
        self.menuDeck.addAction(self.menuOpenRecent.menuAction())
        self.menuDeck.addAction(self.actionImport)
        self.menuDeck.addSeparator()
        self.menuDeck.addAction(self.actionSave)
        self.menuDeck.addAction(self.actionSaveAs)
        self.menuDeck.addAction(self.actionSyncdeck)
        self.menuDeck.addAction(self.actionExport)
        self.menuDeck.addSeparator()
        self.menuDeck.addAction(self.actionClose)
        self.menuDeck.addSeparator()
        self.menuDeck.addSeparator()
        self.menuDeck.addAction(self.actionExit)
        self.menu_Lookup.addAction(self.actionLookup_expr)
        self.menu_Lookup.addAction(self.actionLookup_mean)
        self.menu_Lookup.addSeparator()
        self.menu_Lookup.addAction(self.actionLookup_as)
        self.menu_Lookup.addAction(self.actionLookup_es)
        self.menu_Lookup.addAction(self.actionLookup_esk)
        self.menuTools.addAction(self.actionMarkCard)
        self.menuTools.addAction(self.actionSuspendCard)
        self.menuTools.addSeparator()
        self.menuTools.addAction(self.actionRepeatAudio)
        self.menuTools.addAction(self.actionRepeatQuestionAudio)
        self.menuTools.addAction(self.actionRepeatAnswerAudio)
        self.menuTools.addSeparator()
        self.menuTools.addAction(self.actionGraphs)
        self.menuTools.addAction(self.actionDstats)
        self.menuTools.addAction(self.actionKstats)
        self.menuTools.addAction(self.actionCstats)
        self.menuTools.addSeparator()
        self.menuTools.addAction(self.menu_Lookup.menuAction())
        self.menuTools.addSeparator()
        self.menubar.addAction(self.menuDeck.menuAction())
        self.menubar.addAction(self.menuEdit.menuAction())
        self.menubar.addAction(self.menuTools.menuAction())
        self.menubar.addAction(self.menuHelp.menuAction())
        self.toolBar.addAction(self.actionNew)
        self.toolBar.addAction(self.actionOpen)
        self.toolBar.addAction(self.actionSave)
        self.toolBar.addAction(self.actionSyncdeck)
        self.toolBar.addSeparator()
        self.toolBar.addAction(self.actionAddcards)
        self.toolBar.addAction(self.actionEditdeck)
        self.toolBar.addAction(self.actionDisplayProperties)
        self.toolBar.addSeparator()
        self.toolBar.addAction(self.actionGraphs)
        self.toolBar.addAction(self.actionDstats)
        self.toolBar.addAction(self.actionCstats)
        self.toolBar.addSeparator()
        self.toolBar.addAction(self.actionRepeatAudio)
        self.toolBar.addAction(self.actionMarkCard)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        MainWindow.setWindowTitle(_("Anki"))
        self.menuHelp.setTitle(_("&Help"))
        self.menuEdit.setTitle(_("&Edit"))
        self.menuDeck.setTitle(_("&Deck"))
        self.menuOpenRecent.setTitle(_("Open &Recent"))
        self.menuTools.setTitle(_("&Tools"))
        self.menu_Lookup.setTitle(_("&Lookup"))
        self.actionExit.setText(_("E&xit"))
        self.actionExit.setShortcut(_("Ctrl+Q"))
        self.actionNew.setText(_("&New"))
        self.actionNew.setShortcut(_("Ctrl+N"))
        self.actionOpen.setText(_("&Open..."))
        self.actionOpen.setShortcut(_("Ctrl+O"))
        self.actionClose.setText(_("&Close"))
        self.actionClose.setShortcut(_("Ctrl+W"))
        self.actionSave.setText(_("&Save"))
        self.actionSave.setShortcut(_("Ctrl+S"))
        self.actionSyncdeck.setText(_("Save and S&ync"))
        self.actionSyncdeck.setShortcut(_("Ctrl+Y"))
        self.actionAddcards.setText(_("&Add Cards..."))
        self.actionAddcards.setToolTip(_("Add Cards"))
        self.actionAddcards.setShortcut(_("Ctrl+A"))
        self.actionEditdeck.setText(_("&Edit Deck..."))
        self.actionEditdeck.setShortcut(_("Ctrl+E"))
        self.actionPreferences.setText(_("&Preferences..."))
        self.actionPreferences.setStatusTip(_("Application-wide preferences."))
        self.actionPreferences.setShortcut(_("Ctrl+P"))
        self.actionLookup_expr.setText(_("...&expression on ALC"))
        self.actionLookup_expr.setShortcut(_("Ctrl+1"))
        self.actionLookup_mean.setText(_("...&meaning on ALC"))
        self.actionLookup_mean.setShortcut(_("Ctrl+2"))
        self.actionLookup_as.setText(_("...&selection on ALC"))
        self.actionLookup_as.setShortcut(_("Ctrl+3"))
        self.actionLookup_es.setText(_("...&word selection on Edict"))
        self.actionLookup_es.setShortcut(_("Ctrl+4"))
        self.actionLookup_esk.setText(_("...&kanji selection on Edict"))
        self.actionLookup_esk.setShortcut(_("Ctrl+5"))
        self.actionKstats.setText(_("&Kanji statistics"))
        self.actionDstats.setText(_("&Deck statistics"))
        self.actionStarthere.setText(_("&Start here..."))
        self.actionReportbug.setText(_("&Report bug..."))
        self.actionReportbug.setWhatsThis(_("Open the bug tracker."))
        self.actionAbout.setText(_("&About..."))
        self.actionCstats.setText(_("&Card statistics"))
        self.actionDeckProperties.setText(_("&Deck Properties..."))
        self.actionDeckProperties.setStatusTip(_("Customize syncing, scheduling, priorities and models."))
        self.actionImport.setText(_("&Import..."))
        self.actionGraphs.setText(_("&Graphs"))
        self.actionExport.setText(_("Expor&t..."))
        self.actionDisplayProperties.setText(_("Disp&lay Properties..."))
        self.actionDisplayProperties.setStatusTip(_("Customize fonts, colours and alignment."))
        self.actionOpenSamples.setText(_("Open Sa&mple..."))
        self.actionMarkCard.setText(_("&Mark Card"))
        self.actionSuspendCard.setText(_("&Suspend fact"))
        self.actionSuspendCard.setStatusTip(_("Stop reviewing this card until it\'s unsuspended in the editor."))
        self.actionModelProperties.setText(_("&Model Properties..."))
        self.actionModelProperties.setStatusTip(_("Customize card layout, fields, etc."))
        self.actionRepeatQuestionAudio.setText(_("Repeat &question audio"))
        self.actionRepeatAnswerAudio.setText(_("Repeat &answer audio"))
        self.actionRepeatAudio.setText(_("Repeat las&t audio"))
        self.actionUndoAnswer.setText(_("&Undo last answer"))
        self.actionForum.setText(_("&Forum..."))
        self.actionSaveAs.setText(_("Save &As"))

import icons_rc
