# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'designer/main.ui'
#

#      by: PyQt4 UI code generator 4.4.4
#
# WARNING! All changes made in this file will be lost!

from PyQt4 import QtCore, QtGui

class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(723, 523)
        sizePolicy = QtGui.QSizePolicy(QtGui.QSizePolicy.Expanding, QtGui.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(MainWindow.sizePolicy().hasHeightForWidth())
        MainWindow.setSizePolicy(sizePolicy)
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap(":/icons/anki.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        MainWindow.setWindowIcon(icon)
        self.centralwidget = QtGui.QWidget(MainWindow)
        sizePolicy = QtGui.QSizePolicy(QtGui.QSizePolicy.Expanding, QtGui.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(1)
        sizePolicy.setVerticalStretch(1)
        sizePolicy.setHeightForWidth(self.centralwidget.sizePolicy().hasHeightForWidth())
        self.centralwidget.setSizePolicy(sizePolicy)
        self.centralwidget.setAutoFillBackground(True)
        self.centralwidget.setObjectName("centralwidget")
        self.hboxlayout = QtGui.QHBoxLayout(self.centralwidget)
        self.hboxlayout.setSpacing(0)
        self.hboxlayout.setMargin(0)
        self.hboxlayout.setObjectName("hboxlayout")
        self.mainTextFrame = QtGui.QFrame(self.centralwidget)
        palette = QtGui.QPalette()
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Window, brush)
        self.mainTextFrame.setPalette(palette)
        self.mainTextFrame.setAutoFillBackground(True)
        self.mainTextFrame.setFrameShape(QtGui.QFrame.NoFrame)
        self.mainTextFrame.setFrameShadow(QtGui.QFrame.Raised)
        self.mainTextFrame.setObjectName("mainTextFrame")
        self.gridLayout = QtGui.QGridLayout(self.mainTextFrame)
        self.gridLayout.setMargin(0)
        self.gridLayout.setSpacing(0)
        self.gridLayout.setObjectName("gridLayout")
        self.buttonStack = QtGui.QStackedWidget(self.mainTextFrame)
        sizePolicy = QtGui.QSizePolicy(QtGui.QSizePolicy.Preferred, QtGui.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(1)
        sizePolicy.setHeightForWidth(self.buttonStack.sizePolicy().hasHeightForWidth())
        self.buttonStack.setSizePolicy(sizePolicy)
        self.buttonStack.setObjectName("buttonStack")
        self.page1 = QtGui.QWidget()
        self.page1.setObjectName("page1")
        self.verticalLayout = QtGui.QVBoxLayout(self.page1)
        self.verticalLayout.setSpacing(0)
        self.verticalLayout.setContentsMargins(8, 4, 8, 4)
        self.verticalLayout.setObjectName("verticalLayout")
        self.horizontalLayout_4 = QtGui.QHBoxLayout()
        self.horizontalLayout_4.setObjectName("horizontalLayout_4")
        spacerItem = QtGui.QSpacerItem(40, 20, QtGui.QSizePolicy.Expanding, QtGui.QSizePolicy.Minimum)
        self.horizontalLayout_4.addItem(spacerItem)
        self.showAnswerButton = QtGui.QPushButton(self.page1)
        sizePolicy = QtGui.QSizePolicy(QtGui.QSizePolicy.Minimum, QtGui.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.showAnswerButton.sizePolicy().hasHeightForWidth())
        self.showAnswerButton.setSizePolicy(sizePolicy)
        self.showAnswerButton.setMinimumSize(QtCore.QSize(0, 41))
        self.showAnswerButton.setObjectName("showAnswerButton")
        self.horizontalLayout_4.addWidget(self.showAnswerButton)
        spacerItem1 = QtGui.QSpacerItem(40, 20, QtGui.QSizePolicy.Expanding, QtGui.QSizePolicy.Minimum)
        self.horizontalLayout_4.addItem(spacerItem1)
        self.verticalLayout.addLayout(self.horizontalLayout_4)
        self.buttonStack.addWidget(self.page1)
        self.page2 = QtGui.QWidget()
        self.page2.setObjectName("page2")
        self.verticalLayout_3 = QtGui.QVBoxLayout(self.page2)
        self.verticalLayout_3.setContentsMargins(0, 4, 0, 4)
        self.verticalLayout_3.setObjectName("verticalLayout_3")
        self.horizontalLayout = QtGui.QHBoxLayout()
        self.horizontalLayout.setObjectName("horizontalLayout")
        spacerItem2 = QtGui.QSpacerItem(40, 0, QtGui.QSizePolicy.Expanding, QtGui.QSizePolicy.Minimum)
        self.horizontalLayout.addItem(spacerItem2)
        self.answerButtonLayout = QtGui.QGridLayout()
        self.answerButtonLayout.setContentsMargins(-1, 4, -1, 4)
        self.answerButtonLayout.setVerticalSpacing(0)
        self.answerButtonLayout.setObjectName("answerButtonLayout")
        self.easeLabel1 = QtGui.QLabel(self.page2)
        self.easeLabel1.setAlignment(QtCore.Qt.AlignCenter)
        self.easeLabel1.setObjectName("easeLabel1")
        self.answerButtonLayout.addWidget(self.easeLabel1, 0, 0, 1, 1)
        self.easeLabel2 = QtGui.QLabel(self.page2)
        self.easeLabel2.setAlignment(QtCore.Qt.AlignCenter)
        self.easeLabel2.setObjectName("easeLabel2")
        self.answerButtonLayout.addWidget(self.easeLabel2, 0, 1, 1, 1)
        self.easeLabel3 = QtGui.QLabel(self.page2)
        self.easeLabel3.setAlignment(QtCore.Qt.AlignCenter)
        self.easeLabel3.setObjectName("easeLabel3")
        self.answerButtonLayout.addWidget(self.easeLabel3, 0, 2, 1, 1)
        self.easeLabel4 = QtGui.QLabel(self.page2)
        self.easeLabel4.setAlignment(QtCore.Qt.AlignCenter)
        self.easeLabel4.setObjectName("easeLabel4")
        self.answerButtonLayout.addWidget(self.easeLabel4, 0, 3, 1, 1)
        self.easeButton1 = QtGui.QPushButton(self.page2)
        self.easeButton1.setObjectName("easeButton1")
        self.answerButtonLayout.addWidget(self.easeButton1, 1, 0, 1, 1)
        self.easeButton2 = QtGui.QPushButton(self.page2)
        self.easeButton2.setObjectName("easeButton2")
        self.answerButtonLayout.addWidget(self.easeButton2, 1, 1, 1, 1)
        self.easeButton3 = QtGui.QPushButton(self.page2)
        self.easeButton3.setObjectName("easeButton3")
        self.answerButtonLayout.addWidget(self.easeButton3, 1, 2, 1, 1)
        self.easeButton4 = QtGui.QPushButton(self.page2)
        self.easeButton4.setObjectName("easeButton4")
        self.answerButtonLayout.addWidget(self.easeButton4, 1, 3, 1, 1)
        self.horizontalLayout.addLayout(self.answerButtonLayout)
        spacerItem3 = QtGui.QSpacerItem(40, 0, QtGui.QSizePolicy.Expanding, QtGui.QSizePolicy.Minimum)
        self.horizontalLayout.addItem(spacerItem3)
        self.verticalLayout_3.addLayout(self.horizontalLayout)
        self.buttonStack.addWidget(self.page2)
        self.typeAnswerPage = QtGui.QWidget()
        self.typeAnswerPage.setObjectName("typeAnswerPage")
        self.buttonStack.addWidget(self.typeAnswerPage)
        self.blankButtonPage = QtGui.QWidget()
        self.blankButtonPage.setObjectName("blankButtonPage")
        self.buttonStack.addWidget(self.blankButtonPage)
        self.gridLayout.addWidget(self.buttonStack, 1, 0, 1, 1)
        self.mainStack = QtGui.QStackedWidget(self.mainTextFrame)
        sizePolicy = QtGui.QSizePolicy(QtGui.QSizePolicy.Expanding, QtGui.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(100)
        sizePolicy.setHeightForWidth(self.mainStack.sizePolicy().hasHeightForWidth())
        self.mainStack.setSizePolicy(sizePolicy)
        self.mainStack.setObjectName("mainStack")
        self.blankPage = QtGui.QWidget()
        self.blankPage.setObjectName("blankPage")
        self.mainStack.addWidget(self.blankPage)
        self.welcomePage = QtGui.QWidget()
        self.welcomePage.setObjectName("welcomePage")
        self.verticalLayout_5 = QtGui.QVBoxLayout(self.welcomePage)
        self.verticalLayout_5.setMargin(6)
        self.verticalLayout_5.setObjectName("verticalLayout_5")
        self.welcomeText = QtGui.QTextBrowser(self.welcomePage)
        self.welcomeText.setFocusPolicy(QtCore.Qt.ClickFocus)
        self.welcomeText.setFrameShape(QtGui.QFrame.NoFrame)
        self.welcomeText.setObjectName("welcomeText")
        self.verticalLayout_5.addWidget(self.welcomeText)
        self.mainStack.addWidget(self.welcomePage)
        self.editPage = QtGui.QWidget()
        self.editPage.setObjectName("editPage")
        self.verticalLayout_2 = QtGui.QVBoxLayout(self.editPage)
        self.verticalLayout_2.setSpacing(0)
        self.verticalLayout_2.setMargin(4)
        self.verticalLayout_2.setObjectName("verticalLayout_2")
        self.fieldsArea = QtGui.QWidget(self.editPage)
        self.fieldsArea.setObjectName("fieldsArea")
        self.verticalLayout_2.addWidget(self.fieldsArea)
        self.saveEditorButton = QtGui.QPushButton(self.editPage)
        icon1 = QtGui.QIcon()
        icon1.addPixmap(QtGui.QPixmap(":/icons/go-previous.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.saveEditorButton.setIcon(icon1)
        self.saveEditorButton.setIconSize(QtCore.QSize(16, 16))
        self.saveEditorButton.setObjectName("saveEditorButton")
        self.verticalLayout_2.addWidget(self.saveEditorButton)
        self.mainStack.addWidget(self.editPage)
        self.optionsPage = QtGui.QWidget()
        self.optionsPage.setObjectName("optionsPage")
        self.verticalLayout_4 = QtGui.QVBoxLayout(self.optionsPage)
        self.verticalLayout_4.setObjectName("verticalLayout_4")
        spacerItem4 = QtGui.QSpacerItem(20, 38, QtGui.QSizePolicy.Minimum, QtGui.QSizePolicy.Expanding)
        self.verticalLayout_4.addItem(spacerItem4)
        self.horizontalLayout_2 = QtGui.QHBoxLayout()
        self.horizontalLayout_2.setObjectName("horizontalLayout_2")
        spacerItem5 = QtGui.QSpacerItem(40, 20, QtGui.QSizePolicy.Expanding, QtGui.QSizePolicy.Minimum)
        self.horizontalLayout_2.addItem(spacerItem5)
        self.studyOptionsFrame = QtGui.QFrame(self.optionsPage)
        self.studyOptionsFrame.setFrameShape(QtGui.QFrame.StyledPanel)
        self.studyOptionsFrame.setFrameShadow(QtGui.QFrame.Raised)
        self.studyOptionsFrame.setObjectName("studyOptionsFrame")
        self.verticalLayout_6 = QtGui.QVBoxLayout(self.studyOptionsFrame)
        self.verticalLayout_6.setObjectName("verticalLayout_6")
        self.verticalLayout_11 = QtGui.QVBoxLayout()
        self.verticalLayout_11.setSpacing(0)
        self.verticalLayout_11.setMargin(10)
        self.verticalLayout_11.setObjectName("verticalLayout_11")
        self.optionsLabel = QtGui.QLabel(self.studyOptionsFrame)
        self.optionsLabel.setTextInteractionFlags(QtCore.Qt.LinksAccessibleByMouse|QtCore.Qt.TextSelectableByMouse)
        self.optionsLabel.setObjectName("optionsLabel")
        self.verticalLayout_11.addWidget(self.optionsLabel)
        spacerItem6 = QtGui.QSpacerItem(20, 6, QtGui.QSizePolicy.Minimum, QtGui.QSizePolicy.Fixed)
        self.verticalLayout_11.addItem(spacerItem6)
        self.line_2 = QtGui.QFrame(self.studyOptionsFrame)
        self.line_2.setMaximumSize(QtCore.QSize(400, 16777215))
        self.line_2.setFrameShape(QtGui.QFrame.HLine)
        self.line_2.setFrameShadow(QtGui.QFrame.Sunken)
        self.line_2.setObjectName("line_2")
        self.verticalLayout_11.addWidget(self.line_2)
        self.studyOptionsLayout1 = QtGui.QGridLayout()
        self.studyOptionsLayout1.setContentsMargins(2, 6, -1, -1)
        self.studyOptionsLayout1.setHorizontalSpacing(0)
        self.studyOptionsLayout1.setVerticalSpacing(6)
        self.studyOptionsLayout1.setObjectName("studyOptionsLayout1")
        self.label_20 = QtGui.QLabel(self.studyOptionsFrame)
        self.label_20.setMinimumSize(QtCore.QSize(140, 0))
        self.label_20.setMargin(4)
        self.label_20.setObjectName("label_20")
        self.studyOptionsLayout1.addWidget(self.label_20, 1, 0, 1, 1)
        self.minuteLimit = QtGui.QLineEdit(self.studyOptionsFrame)
        sizePolicy = QtGui.QSizePolicy(QtGui.QSizePolicy.Expanding, QtGui.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.minuteLimit.sizePolicy().hasHeightForWidth())
        self.minuteLimit.setSizePolicy(sizePolicy)
        self.minuteLimit.setMaximumSize(QtCore.QSize(50, 16777215))
        self.minuteLimit.setObjectName("minuteLimit")
        self.studyOptionsLayout1.addWidget(self.minuteLimit, 1, 1, 1, 1)
        self.label_22 = QtGui.QLabel(self.studyOptionsFrame)
        self.label_22.setMinimumSize(QtCore.QSize(140, 0))
        self.label_22.setMargin(4)
        self.label_22.setObjectName("label_22")
        self.studyOptionsLayout1.addWidget(self.label_22, 0, 0, 1, 1)
        self.newPerDay = QtGui.QLineEdit(self.studyOptionsFrame)
        sizePolicy = QtGui.QSizePolicy(QtGui.QSizePolicy.Expanding, QtGui.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.newPerDay.sizePolicy().hasHeightForWidth())
        self.newPerDay.setSizePolicy(sizePolicy)
        self.newPerDay.setMaximumSize(QtCore.QSize(50, 16777215))
        self.newPerDay.setObjectName("newPerDay")
        self.studyOptionsLayout1.addWidget(self.newPerDay, 0, 1, 1, 1)
        spacerItem7 = QtGui.QSpacerItem(40, 20, QtGui.QSizePolicy.Expanding, QtGui.QSizePolicy.Minimum)
        self.studyOptionsLayout1.addItem(spacerItem7, 0, 2, 1, 1)
        self.questionLimit = QtGui.QLineEdit(self.studyOptionsFrame)
        sizePolicy = QtGui.QSizePolicy(QtGui.QSizePolicy.Expanding, QtGui.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.questionLimit.sizePolicy().hasHeightForWidth())
        self.questionLimit.setSizePolicy(sizePolicy)
        self.questionLimit.setMaximumSize(QtCore.QSize(50, 16777215))
        self.questionLimit.setObjectName("questionLimit")
        self.studyOptionsLayout1.addWidget(self.questionLimit, 2, 1, 1, 1)
        self.label = QtGui.QLabel(self.studyOptionsFrame)
        self.label.setMargin(4)
        self.label.setObjectName("label")
        self.studyOptionsLayout1.addWidget(self.label, 2, 0, 1, 1)
        self.verticalLayout_11.addLayout(self.studyOptionsLayout1)
        self.verticalLayout_12 = QtGui.QVBoxLayout()
        self.verticalLayout_12.setObjectName("verticalLayout_12")
        self.optionsBox = QtGui.QWidget(self.studyOptionsFrame)
        self.optionsBox.setObjectName("optionsBox")
        self.verticalLayout_7 = QtGui.QVBoxLayout(self.optionsBox)
        self.verticalLayout_7.setSpacing(10)
        self.verticalLayout_7.setContentsMargins(2, 6, 0, 0)
        self.verticalLayout_7.setObjectName("verticalLayout_7")
        self.newCardOrder = QtGui.QComboBox(self.optionsBox)
        self.newCardOrder.setObjectName("newCardOrder")
        self.verticalLayout_7.addWidget(self.newCardOrder)
        self.newCardScheduling = QtGui.QComboBox(self.optionsBox)
        self.newCardScheduling.setObjectName("newCardScheduling")
        self.verticalLayout_7.addWidget(self.newCardScheduling)
        self.revCardOrder = QtGui.QComboBox(self.optionsBox)
        self.revCardOrder.setObjectName("revCardOrder")
        self.verticalLayout_7.addWidget(self.revCardOrder)
        self.failedCardsOption = QtGui.QComboBox(self.optionsBox)
        self.failedCardsOption.setObjectName("failedCardsOption")
        self.verticalLayout_7.addWidget(self.failedCardsOption)
        self.verticalLayout_12.addWidget(self.optionsBox)
        self.studyOptionsReviewBar = QtGui.QGridLayout()
        self.studyOptionsReviewBar.setContentsMargins(-1, 20, -1, -1)
        self.studyOptionsReviewBar.setHorizontalSpacing(10)
        self.studyOptionsReviewBar.setObjectName("studyOptionsReviewBar")
        self.startReviewingButton = QtGui.QPushButton(self.studyOptionsFrame)
        sizePolicy = QtGui.QSizePolicy(QtGui.QSizePolicy.Expanding, QtGui.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.startReviewingButton.sizePolicy().hasHeightForWidth())
        self.startReviewingButton.setSizePolicy(sizePolicy)
        self.startReviewingButton.setMinimumSize(QtCore.QSize(0, 26))
        icon2 = QtGui.QIcon()
        icon2.addPixmap(QtGui.QPixmap(":/icons/player-time.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.startReviewingButton.setIcon(icon2)
        self.startReviewingButton.setAutoDefault(True)
        self.startReviewingButton.setDefault(True)
        self.startReviewingButton.setObjectName("startReviewingButton")
        self.studyOptionsReviewBar.addWidget(self.startReviewingButton, 0, 0, 1, 1)
        self.optionsButton = QtGui.QPushButton(self.studyOptionsFrame)
        self.optionsButton.setMinimumSize(QtCore.QSize(0, 26))
        self.optionsButton.setCheckable(True)
        self.optionsButton.setChecked(False)
        self.optionsButton.setFlat(False)
        self.optionsButton.setObjectName("optionsButton")
        self.studyOptionsReviewBar.addWidget(self.optionsButton, 0, 1, 1, 1)
        self.optionsHelpButton = QtGui.QPushButton(self.studyOptionsFrame)
        self.optionsHelpButton.setMinimumSize(QtCore.QSize(0, 26))
        self.optionsHelpButton.setObjectName("optionsHelpButton")
        self.studyOptionsReviewBar.addWidget(self.optionsHelpButton, 0, 2, 1, 1)
        self.verticalLayout_12.addLayout(self.studyOptionsReviewBar)
        self.verticalLayout_11.addLayout(self.verticalLayout_12)
        self.verticalLayout_6.addLayout(self.verticalLayout_11)
        self.horizontalLayout_2.addWidget(self.studyOptionsFrame)
        spacerItem8 = QtGui.QSpacerItem(40, 20, QtGui.QSizePolicy.Expanding, QtGui.QSizePolicy.Minimum)
        self.horizontalLayout_2.addItem(spacerItem8)
        self.verticalLayout_4.addLayout(self.horizontalLayout_2)
        spacerItem9 = QtGui.QSpacerItem(20, 39, QtGui.QSizePolicy.Minimum, QtGui.QSizePolicy.Expanding)
        self.verticalLayout_4.addItem(spacerItem9)
        self.mainStack.addWidget(self.optionsPage)
        self.congratsPage = QtGui.QWidget()
        self.congratsPage.setObjectName("congratsPage")
        self.verticalLayout_8 = QtGui.QVBoxLayout(self.congratsPage)
        self.verticalLayout_8.setObjectName("verticalLayout_8")
        spacerItem10 = QtGui.QSpacerItem(20, 219, QtGui.QSizePolicy.Minimum, QtGui.QSizePolicy.Expanding)
        self.verticalLayout_8.addItem(spacerItem10)
        self.horizontalLayout_3 = QtGui.QHBoxLayout()
        self.horizontalLayout_3.setObjectName("horizontalLayout_3")
        spacerItem11 = QtGui.QSpacerItem(40, 20, QtGui.QSizePolicy.Expanding, QtGui.QSizePolicy.Minimum)
        self.horizontalLayout_3.addItem(spacerItem11)
        self.frame_2 = QtGui.QFrame(self.congratsPage)
        self.frame_2.setFrameShape(QtGui.QFrame.StyledPanel)
        self.frame_2.setFrameShadow(QtGui.QFrame.Raised)
        self.frame_2.setObjectName("frame_2")
        self.verticalLayout_9 = QtGui.QVBoxLayout(self.frame_2)
        self.verticalLayout_9.setObjectName("verticalLayout_9")
        self.verticalLayout_10 = QtGui.QVBoxLayout()
        self.verticalLayout_10.setMargin(10)
        self.verticalLayout_10.setObjectName("verticalLayout_10")
        spacerItem12 = QtGui.QSpacerItem(20, 10, QtGui.QSizePolicy.Minimum, QtGui.QSizePolicy.Fixed)
        self.verticalLayout_10.addItem(spacerItem12)
        self.congratsLabel = QtGui.QLabel(self.frame_2)
        self.congratsLabel.setMargin(0)
        self.congratsLabel.setObjectName("congratsLabel")
        self.verticalLayout_10.addWidget(self.congratsLabel)
        spacerItem13 = QtGui.QSpacerItem(20, 10, QtGui.QSizePolicy.Minimum, QtGui.QSizePolicy.Fixed)
        self.verticalLayout_10.addItem(spacerItem13)
        self.learnMoreButton = QtGui.QPushButton(self.frame_2)
        self.learnMoreButton.setIconSize(QtCore.QSize(32, 32))
        self.learnMoreButton.setObjectName("learnMoreButton")
        self.verticalLayout_10.addWidget(self.learnMoreButton)
        self.reviewEarlyButton = QtGui.QPushButton(self.frame_2)
        self.reviewEarlyButton.setIconSize(QtCore.QSize(32, 32))
        self.reviewEarlyButton.setObjectName("reviewEarlyButton")
        self.verticalLayout_10.addWidget(self.reviewEarlyButton)
        self.verticalLayout_9.addLayout(self.verticalLayout_10)
        self.horizontalLayout_3.addWidget(self.frame_2)
        spacerItem14 = QtGui.QSpacerItem(40, 20, QtGui.QSizePolicy.Expanding, QtGui.QSizePolicy.Minimum)
        self.horizontalLayout_3.addItem(spacerItem14)
        self.verticalLayout_8.addLayout(self.horizontalLayout_3)
        spacerItem15 = QtGui.QSpacerItem(20, 219, QtGui.QSizePolicy.Minimum, QtGui.QSizePolicy.Expanding)
        self.verticalLayout_8.addItem(spacerItem15)
        self.mainStack.addWidget(self.congratsPage)
        self.gridLayout.addWidget(self.mainStack, 0, 0, 1, 1)
        self.hboxlayout.addWidget(self.mainTextFrame)
        self.helpFrame = QtGui.QFrame(self.centralwidget)
        self.helpFrame.setFrameShape(QtGui.QFrame.NoFrame)
        self.helpFrame.setFrameShadow(QtGui.QFrame.Raised)
        self.helpFrame.setObjectName("helpFrame")
        self.hboxlayout1 = QtGui.QHBoxLayout(self.helpFrame)
        self.hboxlayout1.setSpacing(0)
        self.hboxlayout1.setMargin(0)
        self.hboxlayout1.setObjectName("hboxlayout1")
        self.line = QtGui.QFrame(self.helpFrame)
        self.line.setFrameShape(QtGui.QFrame.VLine)
        self.line.setFrameShadow(QtGui.QFrame.Sunken)
        self.line.setObjectName("line")
        self.hboxlayout1.addWidget(self.line)
        self.innerHelpFrame = QtGui.QFrame(self.helpFrame)
        sizePolicy = QtGui.QSizePolicy(QtGui.QSizePolicy.Preferred, QtGui.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.innerHelpFrame.sizePolicy().hasHeightForWidth())
        self.innerHelpFrame.setSizePolicy(sizePolicy)
        palette = QtGui.QPalette()
        brush = QtGui.QBrush(QtGui.QColor(255, 250, 230))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 250, 230))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(207, 207, 207))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Window, brush)
        self.innerHelpFrame.setPalette(palette)
        self.innerHelpFrame.setAutoFillBackground(True)
        self.innerHelpFrame.setFrameShape(QtGui.QFrame.NoFrame)
        self.innerHelpFrame.setFrameShadow(QtGui.QFrame.Raised)
        self.innerHelpFrame.setObjectName("innerHelpFrame")
        self.hboxlayout2 = QtGui.QHBoxLayout(self.innerHelpFrame)
        self.hboxlayout2.setSpacing(6)
        self.hboxlayout2.setMargin(9)
        self.hboxlayout2.setObjectName("hboxlayout2")
        self.help = QtGui.QTextBrowser(self.innerHelpFrame)
        self.help.setEnabled(True)
        sizePolicy = QtGui.QSizePolicy(QtGui.QSizePolicy.Preferred, QtGui.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.help.sizePolicy().hasHeightForWidth())
        self.help.setSizePolicy(sizePolicy)
        self.help.setMinimumSize(QtCore.QSize(250, 0))
        self.help.setMaximumSize(QtCore.QSize(300, 16777215))
        palette = QtGui.QPalette()
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Text, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 250, 230))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Text, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 250, 230))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(165, 164, 164))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Text, brush)
        brush = QtGui.QBrush(QtGui.QColor(207, 207, 207))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Base, brush)
        self.help.setPalette(palette)
        self.help.setFrameShape(QtGui.QFrame.NoFrame)
        self.help.setFrameShadow(QtGui.QFrame.Sunken)
        self.help.setHorizontalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOff)
        self.help.setObjectName("help")
        self.hboxlayout2.addWidget(self.help)
        self.hboxlayout1.addWidget(self.innerHelpFrame)
        self.hboxlayout.addWidget(self.helpFrame)
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtGui.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 723, 22))
        self.menubar.setObjectName("menubar")
        self.menuHelp = QtGui.QMenu(self.menubar)
        self.menuHelp.setObjectName("menuHelp")
        self.menuEdit = QtGui.QMenu(self.menubar)
        self.menuEdit.setObjectName("menuEdit")
        self.menuDeck = QtGui.QMenu(self.menubar)
        self.menuDeck.setObjectName("menuDeck")
        self.menuOpenRecent = QtGui.QMenu(self.menuDeck)
        icon3 = QtGui.QIcon()
        icon3.addPixmap(QtGui.QPixmap(":/icons/document-open-recent.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.menuOpenRecent.setIcon(icon3)
        self.menuOpenRecent.setObjectName("menuOpenRecent")
        self.menuDownload = QtGui.QMenu(self.menuDeck)
        icon4 = QtGui.QIcon()
        icon4.addPixmap(QtGui.QPixmap(":/icons/document-open-remote.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.menuDownload.setIcon(icon4)
        self.menuDownload.setObjectName("menuDownload")
        self.menuTools = QtGui.QMenu(self.menubar)
        self.menuTools.setObjectName("menuTools")
        self.menu_Lookup = QtGui.QMenu(self.menuTools)
        icon5 = QtGui.QIcon()
        icon5.addPixmap(QtGui.QPixmap(":/icons/edit-find.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.menu_Lookup.setIcon(icon5)
        self.menu_Lookup.setObjectName("menu_Lookup")
        self.menuAdvanced = QtGui.QMenu(self.menuTools)
        self.menuAdvanced.setObjectName("menuAdvanced")
        self.menu_Settings = QtGui.QMenu(self.menubar)
        self.menu_Settings.setObjectName("menu_Settings")
        self.menuPlugins = QtGui.QMenu(self.menu_Settings)
        icon6 = QtGui.QIcon()
        icon6.addPixmap(QtGui.QPixmap(":/icons/preferences-plugin.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.menuPlugins.setIcon(icon6)
        self.menuPlugins.setObjectName("menuPlugins")
        self.menuStartup = QtGui.QMenu(self.menuPlugins)
        self.menuStartup.setObjectName("menuStartup")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtGui.QStatusBar(MainWindow)
        self.statusbar.setSizeGripEnabled(True)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)
        self.toolBar = QtGui.QToolBar(MainWindow)
        self.toolBar.setEnabled(True)
        self.toolBar.setOrientation(QtCore.Qt.Horizontal)
        self.toolBar.setIconSize(QtCore.QSize(32, 32))
        self.toolBar.setObjectName("toolBar")
        MainWindow.addToolBar(QtCore.Qt.TopToolBarArea, self.toolBar)
        self.actionExit = QtGui.QAction(MainWindow)
        icon7 = QtGui.QIcon()
        icon7.addPixmap(QtGui.QPixmap(":/icons/application-exit.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionExit.setIcon(icon7)
        self.actionExit.setObjectName("actionExit")
        self.actionNew = QtGui.QAction(MainWindow)
        icon8 = QtGui.QIcon()
        icon8.addPixmap(QtGui.QPixmap(":/icons/document-new.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionNew.setIcon(icon8)
        self.actionNew.setObjectName("actionNew")
        self.actionOpen = QtGui.QAction(MainWindow)
        icon9 = QtGui.QIcon()
        icon9.addPixmap(QtGui.QPixmap(":/icons/document-open.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionOpen.setIcon(icon9)
        self.actionOpen.setObjectName("actionOpen")
        self.actionClose = QtGui.QAction(MainWindow)
        icon10 = QtGui.QIcon()
        icon10.addPixmap(QtGui.QPixmap(":/icons/fileclose.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionClose.setIcon(icon10)
        self.actionClose.setObjectName("actionClose")
        self.actionSave = QtGui.QAction(MainWindow)
        icon11 = QtGui.QIcon()
        icon11.addPixmap(QtGui.QPixmap(":/icons/document-save.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionSave.setIcon(icon11)
        self.actionSave.setShortcutContext(QtCore.Qt.ApplicationShortcut)
        self.actionSave.setObjectName("actionSave")
        self.actionSyncdeck = QtGui.QAction(MainWindow)
        icon12 = QtGui.QIcon()
        icon12.addPixmap(QtGui.QPixmap(":/icons/multisynk.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionSyncdeck.setIcon(icon12)
        self.actionSyncdeck.setObjectName("actionSyncdeck")
        self.actionAddcards = QtGui.QAction(MainWindow)
        icon13 = QtGui.QIcon()
        icon13.addPixmap(QtGui.QPixmap(":/icons/list-add.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionAddcards.setIcon(icon13)
        self.actionAddcards.setObjectName("actionAddcards")
        self.actionEditdeck = QtGui.QAction(MainWindow)
        icon14 = QtGui.QIcon()
        icon14.addPixmap(QtGui.QPixmap(":/icons/find.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionEditdeck.setIcon(icon14)
        self.actionEditdeck.setObjectName("actionEditdeck")
        self.actionPreferences = QtGui.QAction(MainWindow)
        icon15 = QtGui.QIcon()
        icon15.addPixmap(QtGui.QPixmap(":/icons/configure.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionPreferences.setIcon(icon15)
        self.actionPreferences.setMenuRole(QtGui.QAction.PreferencesRole)
        self.actionPreferences.setObjectName("actionPreferences")
        self.actionLookup_expr = QtGui.QAction(MainWindow)
        self.actionLookup_expr.setObjectName("actionLookup_expr")
        self.actionLookup_mean = QtGui.QAction(MainWindow)
        self.actionLookup_mean.setObjectName("actionLookup_mean")
        self.actionLookup_as = QtGui.QAction(MainWindow)
        self.actionLookup_as.setObjectName("actionLookup_as")
        self.actionLookup_es = QtGui.QAction(MainWindow)
        self.actionLookup_es.setObjectName("actionLookup_es")
        self.actionLookup_esk = QtGui.QAction(MainWindow)
        self.actionLookup_esk.setObjectName("actionLookup_esk")
        self.actionKstats = QtGui.QAction(MainWindow)
        icon16 = QtGui.QIcon()
        icon16.addPixmap(QtGui.QPixmap(":/icons/kanji.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionKstats.setIcon(icon16)
        self.actionKstats.setObjectName("actionKstats")
        self.actionDstats = QtGui.QAction(MainWindow)
        icon17 = QtGui.QIcon()
        icon17.addPixmap(QtGui.QPixmap(":/icons/spreadsheet.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionDstats.setIcon(icon17)
        self.actionDstats.setObjectName("actionDstats")
        self.actionStarthere = QtGui.QAction(MainWindow)
        icon18 = QtGui.QIcon()
        icon18.addPixmap(QtGui.QPixmap(":/icons/help.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionStarthere.setIcon(icon18)
        self.actionStarthere.setObjectName("actionStarthere")
        self.actionReportbug = QtGui.QAction(MainWindow)
        icon19 = QtGui.QIcon()
        icon19.addPixmap(QtGui.QPixmap(":/icons/kbugbuster.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionReportbug.setIcon(icon19)
        self.actionReportbug.setObjectName("actionReportbug")
        self.actionAbout = QtGui.QAction(MainWindow)
        self.actionAbout.setIcon(icon)
        self.actionAbout.setMenuRole(QtGui.QAction.AboutRole)
        self.actionAbout.setObjectName("actionAbout")
        self.actionCstats = QtGui.QAction(MainWindow)
        icon20 = QtGui.QIcon()
        icon20.addPixmap(QtGui.QPixmap(":/icons/package_games_card.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionCstats.setIcon(icon20)
        self.actionCstats.setObjectName("actionCstats")
        self.actionDeckProperties = QtGui.QAction(MainWindow)
        icon21 = QtGui.QIcon()
        icon21.addPixmap(QtGui.QPixmap(":/icons/contents.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionDeckProperties.setIcon(icon21)
        self.actionDeckProperties.setObjectName("actionDeckProperties")
        self.actionImport = QtGui.QAction(MainWindow)
        icon22 = QtGui.QIcon()
        icon22.addPixmap(QtGui.QPixmap(":/icons/document-import.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionImport.setIcon(icon22)
        self.actionImport.setObjectName("actionImport")
        self.actionGraphs = QtGui.QAction(MainWindow)
        icon23 = QtGui.QIcon()
        icon23.addPixmap(QtGui.QPixmap(":/icons/view-statistics.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionGraphs.setIcon(icon23)
        self.actionGraphs.setObjectName("actionGraphs")
        self.actionExport = QtGui.QAction(MainWindow)
        icon24 = QtGui.QIcon()
        icon24.addPixmap(QtGui.QPixmap(":/icons/document-export.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionExport.setIcon(icon24)
        self.actionExport.setObjectName("actionExport")
        self.actionDisplayProperties = QtGui.QAction(MainWindow)
        icon25 = QtGui.QIcon()
        icon25.addPixmap(QtGui.QPixmap(":/icons/preferences-desktop-font.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionDisplayProperties.setIcon(icon25)
        self.actionDisplayProperties.setObjectName("actionDisplayProperties")
        self.actionOpenSamples = QtGui.QAction(MainWindow)
        self.actionOpenSamples.setObjectName("actionOpenSamples")
        self.actionMarkCard = QtGui.QAction(MainWindow)
        self.actionMarkCard.setCheckable(True)
        icon26 = QtGui.QIcon()
        icon26.addPixmap(QtGui.QPixmap(":/icons/rating.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionMarkCard.setIcon(icon26)
        self.actionMarkCard.setObjectName("actionMarkCard")
        self.actionSuspendCard = QtGui.QAction(MainWindow)
        icon27 = QtGui.QIcon()
        icon27.addPixmap(QtGui.QPixmap(":/icons/media-playback-pause.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionSuspendCard.setIcon(icon27)
        self.actionSuspendCard.setObjectName("actionSuspendCard")
        self.actionModelProperties = QtGui.QAction(MainWindow)
        icon28 = QtGui.QIcon()
        icon28.addPixmap(QtGui.QPixmap(":/icons/kpersonalizer.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionModelProperties.setIcon(icon28)
        self.actionModelProperties.setObjectName("actionModelProperties")
        self.actionRepeatQuestionAudio = QtGui.QAction(MainWindow)
        self.actionRepeatQuestionAudio.setObjectName("actionRepeatQuestionAudio")
        self.actionRepeatAnswerAudio = QtGui.QAction(MainWindow)
        self.actionRepeatAnswerAudio.setObjectName("actionRepeatAnswerAudio")
        self.actionRepeatAudio = QtGui.QAction(MainWindow)
        self.actionRepeatAudio.setEnabled(False)
        icon29 = QtGui.QIcon()
        icon29.addPixmap(QtGui.QPixmap(":/icons/media-playback-start.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionRepeatAudio.setIcon(icon29)
        self.actionRepeatAudio.setObjectName("actionRepeatAudio")
        self.actionUndo = QtGui.QAction(MainWindow)
        self.actionUndo.setEnabled(False)
        icon30 = QtGui.QIcon()
        icon30.addPixmap(QtGui.QPixmap(":/icons/edit-undo.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionUndo.setIcon(icon30)
        self.actionUndo.setObjectName("actionUndo")
        self.actionForum = QtGui.QAction(MainWindow)
        icon31 = QtGui.QIcon()
        icon31.addPixmap(QtGui.QPixmap(":/icons/view-pim-news.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionForum.setIcon(icon31)
        self.actionForum.setObjectName("actionForum")
        self.actionSaveAs = QtGui.QAction(MainWindow)
        icon32 = QtGui.QIcon()
        icon32.addPixmap(QtGui.QPixmap(":/icons/document-save-as.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionSaveAs.setIcon(icon32)
        self.actionSaveAs.setObjectName("actionSaveAs")
        self.actionCheckDatabaseIntegrity = QtGui.QAction(MainWindow)
        icon33 = QtGui.QIcon()
        icon33.addPixmap(QtGui.QPixmap(":/icons/sqlitebrowser.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionCheckDatabaseIntegrity.setIcon(icon33)
        self.actionCheckDatabaseIntegrity.setObjectName("actionCheckDatabaseIntegrity")
        self.actionOptimizeDatabase = QtGui.QAction(MainWindow)
        icon34 = QtGui.QIcon()
        icon34.addPixmap(QtGui.QPixmap(":/icons/games-solve.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionOptimizeDatabase.setIcon(icon34)
        self.actionOptimizeDatabase.setObjectName("actionOptimizeDatabase")
        self.actionCheckMediaDatabase = QtGui.QAction(MainWindow)
        icon35 = QtGui.QIcon()
        icon35.addPixmap(QtGui.QPixmap(":/icons/text-speak.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionCheckMediaDatabase.setIcon(icon35)
        self.actionCheckMediaDatabase.setObjectName("actionCheckMediaDatabase")
        self.actionCram = QtGui.QAction(MainWindow)
        icon36 = QtGui.QIcon()
        icon36.addPixmap(QtGui.QPixmap(":/icons/view-pim-calendar.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionCram.setIcon(icon36)
        self.actionCram.setObjectName("actionCram")
        self.actionReleaseNotes = QtGui.QAction(MainWindow)
        icon37 = QtGui.QIcon()
        icon37.addPixmap(QtGui.QPixmap(":/icons/kblogger.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionReleaseNotes.setIcon(icon37)
        self.actionReleaseNotes.setObjectName("actionReleaseNotes")
        self.actionGetPlugins = QtGui.QAction(MainWindow)
        self.actionGetPlugins.setObjectName("actionGetPlugins")
        self.actionOpenPluginFolder = QtGui.QAction(MainWindow)
        self.actionOpenPluginFolder.setObjectName("actionOpenPluginFolder")
        self.actionEnableAllPlugins = QtGui.QAction(MainWindow)
        self.actionEnableAllPlugins.setObjectName("actionEnableAllPlugins")
        self.actionDisableAllPlugins = QtGui.QAction(MainWindow)
        self.actionDisableAllPlugins.setObjectName("actionDisableAllPlugins")
        self.actionA = QtGui.QAction(MainWindow)
        self.actionA.setObjectName("actionA")
        self.actionActiveTags = QtGui.QAction(MainWindow)
        icon38 = QtGui.QIcon()
        icon38.addPixmap(QtGui.QPixmap(":/icons/anki-tag.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionActiveTags.setIcon(icon38)
        self.actionActiveTags.setObjectName("actionActiveTags")
        self.actionEditCurrent = QtGui.QAction(MainWindow)
        icon39 = QtGui.QIcon()
        icon39.addPixmap(QtGui.QPixmap(":/icons/edit-rename.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionEditCurrent.setIcon(icon39)
        self.actionEditCurrent.setObjectName("actionEditCurrent")
        self.actionRedo = QtGui.QAction(MainWindow)
        icon40 = QtGui.QIcon()
        icon40.addPixmap(QtGui.QPixmap(":/icons/edit-redo.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionRedo.setIcon(icon40)
        self.actionRedo.setObjectName("actionRedo")
        self.actionDelete = QtGui.QAction(MainWindow)
        icon41 = QtGui.QIcon()
        icon41.addPixmap(QtGui.QPixmap(":/icons/editdelete.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionDelete.setIcon(icon41)
        self.actionDelete.setObjectName("actionDelete")
        self.action_Delete_Fact = QtGui.QAction(MainWindow)
        self.action_Delete_Fact.setObjectName("action_Delete_Fact")
        self.actionCacheLatex = QtGui.QAction(MainWindow)
        self.actionCacheLatex.setObjectName("actionCacheLatex")
        self.actionUncacheLatex = QtGui.QAction(MainWindow)
        self.actionUncacheLatex.setObjectName("actionUncacheLatex")
        self.actionStudyOptions = QtGui.QAction(MainWindow)
        icon42 = QtGui.QIcon()
        icon42.addPixmap(QtGui.QPixmap(":/icons/chronometer.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionStudyOptions.setIcon(icon42)
        self.actionStudyOptions.setObjectName("actionStudyOptions")
        self.actionDonate = QtGui.QAction(MainWindow)
        icon43 = QtGui.QIcon()
        icon43.addPixmap(QtGui.QPixmap(":/icons/emblem-favorite.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionDonate.setIcon(icon43)
        self.actionDonate.setObjectName("actionDonate")
        self.actionRecordNoiseProfile = QtGui.QAction(MainWindow)
        icon44 = QtGui.QIcon()
        icon44.addPixmap(QtGui.QPixmap(":/icons/media-record.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionRecordNoiseProfile.setIcon(icon44)
        self.actionRecordNoiseProfile.setObjectName("actionRecordNoiseProfile")
        self.actionGetShared = QtGui.QAction(MainWindow)
        self.actionGetShared.setObjectName("actionGetShared")
        self.actionShare = QtGui.QAction(MainWindow)
        self.actionShare.setObjectName("actionShare")
        self.actionOpenOnline = QtGui.QAction(MainWindow)
        self.actionOpenOnline.setObjectName("actionOpenOnline")
        self.actionDownloadSharedDeck = QtGui.QAction(MainWindow)
        self.actionDownloadSharedDeck.setObjectName("actionDownloadSharedDeck")
        self.actionDownloadSharedPlugin = QtGui.QAction(MainWindow)
        self.actionDownloadSharedPlugin.setObjectName("actionDownloadSharedPlugin")
        self.actionBuryFact = QtGui.QAction(MainWindow)
        icon45 = QtGui.QIcon()
        icon45.addPixmap(QtGui.QPixmap(":/icons/khtml_kget.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionBuryFact.setIcon(icon45)
        self.actionBuryFact.setObjectName("actionBuryFact")
        self.menuHelp.addAction(self.actionStarthere)
        self.menuHelp.addSeparator()
        self.menuHelp.addAction(self.actionReportbug)
        self.menuHelp.addAction(self.actionForum)
        self.menuHelp.addAction(self.actionReleaseNotes)
        self.menuHelp.addSeparator()
        self.menuHelp.addAction(self.actionDonate)
        self.menuHelp.addAction(self.actionAbout)
        self.menuEdit.addAction(self.actionUndo)
        self.menuEdit.addAction(self.actionRedo)
        self.menuEdit.addSeparator()
        self.menuEdit.addAction(self.actionAddcards)
        self.menuEdit.addAction(self.actionEditCurrent)
        self.menuEdit.addAction(self.actionEditdeck)
        self.menuEdit.addSeparator()
        self.menuEdit.addAction(self.actionMarkCard)
        self.menuEdit.addAction(self.actionBuryFact)
        self.menuEdit.addAction(self.actionSuspendCard)
        self.menuEdit.addAction(self.actionDelete)
        self.menuDownload.addAction(self.actionOpenOnline)
        self.menuDownload.addSeparator()
        self.menuDownload.addAction(self.actionDownloadSharedDeck)
        self.menuDownload.addAction(self.actionDownloadSharedPlugin)
        self.menuDeck.addAction(self.actionNew)
        self.menuDeck.addAction(self.actionOpen)
        self.menuDeck.addAction(self.menuOpenRecent.menuAction())
        self.menuDeck.addAction(self.menuDownload.menuAction())
        self.menuDeck.addAction(self.actionImport)
        self.menuDeck.addSeparator()
        self.menuDeck.addAction(self.actionSave)
        self.menuDeck.addAction(self.actionSaveAs)
        self.menuDeck.addAction(self.actionSyncdeck)
        self.menuDeck.addAction(self.actionExport)
        self.menuDeck.addSeparator()
        self.menuDeck.addAction(self.actionClose)
        self.menuDeck.addSeparator()
        self.menuDeck.addAction(self.actionExit)
        self.menu_Lookup.addAction(self.actionLookup_expr)
        self.menu_Lookup.addAction(self.actionLookup_mean)
        self.menu_Lookup.addSeparator()
        self.menu_Lookup.addAction(self.actionLookup_as)
        self.menu_Lookup.addAction(self.actionLookup_es)
        self.menu_Lookup.addAction(self.actionLookup_esk)
        self.menuAdvanced.addAction(self.actionCheckDatabaseIntegrity)
        self.menuAdvanced.addAction(self.actionOptimizeDatabase)
        self.menuAdvanced.addSeparator()
        self.menuAdvanced.addAction(self.actionCheckMediaDatabase)
        self.menuAdvanced.addAction(self.actionCacheLatex)
        self.menuAdvanced.addAction(self.actionUncacheLatex)
        self.menuAdvanced.addSeparator()
        self.menuAdvanced.addAction(self.actionRecordNoiseProfile)
        self.menuTools.addAction(self.actionGraphs)
        self.menuTools.addAction(self.actionDstats)
        self.menuTools.addAction(self.actionKstats)
        self.menuTools.addAction(self.actionCstats)
        self.menuTools.addSeparator()
        self.menuTools.addAction(self.actionRepeatAudio)
        self.menuTools.addAction(self.menu_Lookup.menuAction())
        self.menuTools.addSeparator()
        self.menuTools.addAction(self.menuAdvanced.menuAction())
        self.menuTools.addSeparator()
        self.menuTools.addAction(self.actionCram)
        self.menuTools.addSeparator()
        self.menuStartup.addAction(self.actionEnableAllPlugins)
        self.menuStartup.addAction(self.actionDisableAllPlugins)
        self.menuStartup.addSeparator()
        self.menuPlugins.addAction(self.actionOpenPluginFolder)
        self.menuPlugins.addSeparator()
        self.menuPlugins.addAction(self.menuStartup.menuAction())
        self.menuPlugins.addSeparator()
        self.menu_Settings.addAction(self.actionActiveTags)
        self.menu_Settings.addSeparator()
        self.menu_Settings.addAction(self.actionStudyOptions)
        self.menu_Settings.addAction(self.actionDisplayProperties)
        self.menu_Settings.addAction(self.actionDeckProperties)
        self.menu_Settings.addSeparator()
        self.menu_Settings.addAction(self.menuPlugins.menuAction())
        self.menu_Settings.addAction(self.actionPreferences)
        self.menubar.addAction(self.menuDeck.menuAction())
        self.menubar.addAction(self.menuEdit.menuAction())
        self.menubar.addAction(self.menuTools.menuAction())
        self.menubar.addAction(self.menu_Settings.menuAction())
        self.menubar.addAction(self.menuHelp.menuAction())
        self.toolBar.addAction(self.actionNew)
        self.toolBar.addAction(self.actionOpen)
        self.toolBar.addAction(self.actionSave)
        self.toolBar.addAction(self.actionSyncdeck)
        self.toolBar.addSeparator()
        self.toolBar.addAction(self.actionAddcards)
        self.toolBar.addAction(self.actionEditCurrent)
        self.toolBar.addAction(self.actionEditdeck)
        self.toolBar.addAction(self.actionStudyOptions)
        self.toolBar.addSeparator()
        self.toolBar.addAction(self.actionGraphs)
        self.toolBar.addAction(self.actionDstats)
        self.toolBar.addAction(self.actionCstats)
        self.toolBar.addSeparator()
        self.toolBar.addAction(self.actionRepeatAudio)
        self.toolBar.addAction(self.actionMarkCard)
        self.toolBar.addSeparator()
        self.toolBar.addAction(self.actionDisplayProperties)

        self.retranslateUi(MainWindow)
        self.buttonStack.setCurrentIndex(3)
        self.mainStack.setCurrentIndex(1)
        QtCore.QObject.connect(self.optionsButton, QtCore.SIGNAL("toggled(bool)"), self.optionsBox.setShown)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)
        MainWindow.setTabOrder(self.newPerDay, self.minuteLimit)
        MainWindow.setTabOrder(self.minuteLimit, self.questionLimit)
        MainWindow.setTabOrder(self.questionLimit, self.newCardOrder)
        MainWindow.setTabOrder(self.newCardOrder, self.newCardScheduling)
        MainWindow.setTabOrder(self.newCardScheduling, self.revCardOrder)
        MainWindow.setTabOrder(self.revCardOrder, self.failedCardsOption)
        MainWindow.setTabOrder(self.failedCardsOption, self.startReviewingButton)
        MainWindow.setTabOrder(self.startReviewingButton, self.optionsButton)
        MainWindow.setTabOrder(self.optionsButton, self.optionsHelpButton)
        MainWindow.setTabOrder(self.optionsHelpButton, self.learnMoreButton)
        MainWindow.setTabOrder(self.learnMoreButton, self.reviewEarlyButton)
        MainWindow.setTabOrder(self.reviewEarlyButton, self.help)
        MainWindow.setTabOrder(self.help, self.welcomeText)
        MainWindow.setTabOrder(self.welcomeText, self.showAnswerButton)
        MainWindow.setTabOrder(self.showAnswerButton, self.easeButton1)
        MainWindow.setTabOrder(self.easeButton1, self.easeButton2)
        MainWindow.setTabOrder(self.easeButton2, self.easeButton3)
        MainWindow.setTabOrder(self.easeButton3, self.easeButton4)
        MainWindow.setTabOrder(self.easeButton4, self.saveEditorButton)

    def retranslateUi(self, MainWindow):
        MainWindow.setWindowTitle(_("Anki"))
        self.showAnswerButton.setToolTip(_("Show the answer (shortcut key: space or enter)"))
        self.showAnswerButton.setText(_("Show Answer"))
        self.easeButton1.setToolTip(_("Show this card again soon (shortcut key: 1)"))
        self.easeButton1.setText(_("Again"))
        self.easeButton2.setToolTip(_("Wait a little longer next time (shortcut key: 2)"))
        self.easeButton2.setText(_("Hard"))
        self.easeButton3.setToolTip(_("Wait longer next time (shortcut key: 3)"))
        self.easeButton3.setText(_("Good"))
        self.easeButton4.setToolTip(_("Wait a lot longer next time (shortcut key: 4)"))
        self.easeButton4.setText(_("Easy"))
        self.saveEditorButton.setText(_("Continue Reviewing"))
        self.label_20.setToolTip(_("The <b>number of minutes in a session</b>. When a session is finished, this screen will be shown again, allowing you to start another session. Choose 0 for no limit."))
        self.label_20.setText(_("<b>Session limit (minutes):</b>"))
        self.label_22.setToolTip(_("The maximum number of <b>new cards shown per day</b>. The default is 20, to ensure you don\'t get overwhelmed with reviews after a few days."))
        self.label_22.setText(_("<b>New cards per day:</b>"))
        self.label.setToolTip(_("The <b>number of questions in a session</b>. When a session is finished, this screen will be shown again, allowing you to start another session. Choose 0 for no limit."))
        self.label.setText(_("<b>Session limit (questions):"))
        self.startReviewingButton.setText(_("Review"))
        self.optionsButton.setText(_("More"))
        self.optionsHelpButton.setText(_("Help"))
        self.learnMoreButton.setText(_("&Learn More"))
        self.reviewEarlyButton.setText(_("Re&view Early"))
        self.menuHelp.setTitle(_("&Help"))
        self.menuEdit.setTitle(_("&Edit"))
        self.menuDeck.setTitle(_("&File"))
        self.menuOpenRecent.setTitle(_("Open &Recent"))
        self.menuDownload.setTitle(_("&Download..."))
        self.menuTools.setTitle(_("&Tools"))
        self.menu_Lookup.setTitle(_("&Lookup"))
        self.menuAdvanced.setTitle(_("Ad&vanced"))
        self.menu_Settings.setTitle(_("&Settings"))
        self.menuPlugins.setTitle(_("P&lugins"))
        self.menuStartup.setTitle(_("Startup"))
        self.actionExit.setText(_("E&xit"))
        self.actionExit.setShortcut(_("Ctrl+Q"))
        self.actionNew.setText(_("&New"))
        self.actionNew.setShortcut(_("Ctrl+N"))
        self.actionOpen.setText(_("&Open..."))
        self.actionOpen.setShortcut(_("Ctrl+O"))
        self.actionClose.setText(_("&Close"))
        self.actionClose.setShortcut(_("Ctrl+W"))
        self.actionSave.setText(_("&Save"))
        self.actionSave.setStatusTip(_("Save this deck now"))
        self.actionSave.setShortcut(_("Ctrl+S"))
        self.actionSyncdeck.setText(_("S&ync"))
        self.actionSyncdeck.setStatusTip(_("Synchronize this deck with Anki Online"))
        self.actionSyncdeck.setShortcut(_("Ctrl+Y"))
        self.actionAddcards.setText(_("&Add Items..."))
        self.actionAddcards.setStatusTip(_("Add new items to Anki by typing them in"))
        self.actionAddcards.setShortcut(_("Ctrl+D"))
        self.actionEditdeck.setText(_("Brows&e Items..."))
        self.actionEditdeck.setStatusTip(_("Browse and edit all items"))
        self.actionEditdeck.setShortcut(_("Ctrl+F"))
        self.actionPreferences.setText(_("&Preferences"))
        self.actionPreferences.setStatusTip(_("Configure interface language and options"))
        self.actionPreferences.setShortcut(_("Ctrl+P"))
        self.actionLookup_expr.setText(_("...&expression on ALC"))
        self.actionLookup_expr.setShortcut(_("Ctrl+1"))
        self.actionLookup_mean.setText(_("...&meaning on ALC"))
        self.actionLookup_mean.setShortcut(_("Ctrl+2"))
        self.actionLookup_as.setText(_("...&selection on ALC"))
        self.actionLookup_as.setShortcut(_("Ctrl+3"))
        self.actionLookup_es.setText(_("...&word selection on Edict"))
        self.actionLookup_es.setShortcut(_("Ctrl+4"))
        self.actionLookup_esk.setText(_("...&kanji selection on Edict"))
        self.actionLookup_esk.setShortcut(_("Ctrl+5"))
        self.actionKstats.setText(_("&Kanji Statistics"))
        self.actionDstats.setText(_("&Deck Statistics"))
        self.actionDstats.setStatusTip(_("Show some textual statistics about your deck"))
        self.actionStarthere.setText(_("Documentation"))
        self.actionReportbug.setText(_("&Report Bug..."))
        self.actionReportbug.setWhatsThis(_("Open the bug tracker"))
        self.actionAbout.setText(_("&About..."))
        self.actionCstats.setText(_("&Card Statistics"))
        self.actionCstats.setStatusTip(_("Show statistics about the current card and last card"))
        self.actionDeckProperties.setText(_("&Deck Properties..."))
        self.actionDeckProperties.setStatusTip(_("Customize syncing, scheduling, priorities and models"))
        self.actionImport.setText(_("&Import..."))
        self.actionImport.setStatusTip(_("Import cards from text files, Anki files and more"))
        self.actionGraphs.setText(_("&Graphs..."))
        self.actionGraphs.setStatusTip(_("Show graphical statistics about your deck"))
        self.actionExport.setText(_("Expor&t..."))
        self.actionExport.setStatusTip(_("Save cards in a new deck or text file for sharing with others"))
        self.actionDisplayProperties.setText(_("&Fonts and Colours..."))
        self.actionDisplayProperties.setStatusTip(_("Customize fonts, colours and alignment"))
        self.actionOpenSamples.setText(_("Open Sa&mple..."))
        self.actionMarkCard.setText(_("&Mark Fact"))
        self.actionMarkCard.setStatusTip(_("Apply the \'marked\' tag to this fact, so you find it later in the browser"))
        self.actionMarkCard.setShortcut(_("Ctrl+M"))
        self.actionSuspendCard.setText(_("&Suspend Fact"))
        self.actionSuspendCard.setStatusTip(_("Stop reviewing this card until it\'s unsuspended in the browser"))
        self.actionSuspendCard.setShortcut(_("Ctrl+Shift+S"))
        self.actionModelProperties.setText(_("Current &Model..."))
        self.actionModelProperties.setStatusTip(_("Customize card layout, fields, etc"))
        self.actionRepeatQuestionAudio.setText(_("Repeat &Question Audio"))
        self.actionRepeatAnswerAudio.setText(_("Repeat &Answer Audio"))
        self.actionRepeatAudio.setText(_("Repeat &Audio"))
        self.actionRepeatAudio.setStatusTip(_("Play the last-played audio again"))
        self.actionRepeatAudio.setShortcut(_("F5"))
        self.actionUndo.setText(_("&Undo"))
        self.actionUndo.setShortcut(_("Ctrl+Z"))
        self.actionForum.setText(_("&Forum..."))
        self.actionSaveAs.setText(_("Save &As..."))
        self.actionSaveAs.setStatusTip(_("Save this deck, giving it a new name"))
        self.actionCheckDatabaseIntegrity.setText(_("Check Database..."))
        self.actionCheckDatabaseIntegrity.setStatusTip(_("Check the database for errors"))
        self.actionOptimizeDatabase.setText(_("Optimize Database"))
        self.actionOptimizeDatabase.setStatusTip(_("Remove unused space, making the database file smaller"))
        self.actionCheckMediaDatabase.setText(_("Check Media Database..."))
        self.actionCheckMediaDatabase.setStatusTip(_("Check the files in the media directory"))
        self.actionCram.setText(_("C&ram..."))
        self.actionCram.setStatusTip(_("Do an extra review of specified cards before a test"))
        self.actionReleaseNotes.setText(_("Release Notes..."))
        self.actionGetPlugins.setText(_("&Get Plugins..."))
        self.actionOpenPluginFolder.setText(_("&Open Plugin Folder..."))
        self.actionEnableAllPlugins.setText(_("&Enable All Plugins"))
        self.actionDisableAllPlugins.setText(_("&Disable All Plugins"))
        self.actionA.setText(_("a"))
        self.actionActiveTags.setText(_("Active &Tags..."))
        self.actionActiveTags.setStatusTip(_("Choose the categories to show during review"))
        self.actionEditCurrent.setText(_("Edit &Current..."))
        self.actionEditCurrent.setStatusTip(_("Edit the currently displayed item"))
        self.actionEditCurrent.setShortcut(_("Ctrl+E"))
        self.actionRedo.setText(_("&Redo"))
        self.actionDelete.setText(_("&Delete Card"))
        self.actionDelete.setStatusTip(_("Delete the currently displayed card"))
        self.actionDelete.setShortcut(_("Ctrl+Del"))
        self.action_Delete_Fact.setText(_("&Delete Fact"))
        self.actionCacheLatex.setText(_("Cache LaTeX"))
        self.actionCacheLatex.setStatusTip(_("Pre-generate PNG images of LaTeX cards"))
        self.actionUncacheLatex.setText(_("Uncache LaTeX"))
        self.actionUncacheLatex.setStatusTip(_("Remove generated PNG images of LaTeX cards"))
        self.actionStudyOptions.setText(_("&Study Options..."))
        self.actionStudyOptions.setStatusTip(_("Configure review options"))
        self.actionDonate.setText(_("&Donate..."))
        self.actionRecordNoiseProfile.setText(_("&Record Noise Profile..."))
        self.actionRecordNoiseProfile.setStatusTip(_("Record 10 seconds of silence so that the record function can cancel noise"))
        self.actionGetShared.setText(_("Get Shared..."))
        self.actionGetShared.setStatusTip(_("Open a pre-made deck or plugin"))
        self.actionShare.setText(_("Share..."))
        self.actionOpenOnline.setText(_("Personal Deck"))
        self.actionOpenOnline.setStatusTip(_("Download a deck that you synced from another computer"))
        self.actionDownloadSharedDeck.setText(_("Shared Deck"))
        self.actionDownloadSharedDeck.setStatusTip(_("Download a deck that people have shared publicly"))
        self.actionDownloadSharedPlugin.setText(_("Shared Plugin"))
        self.actionDownloadSharedPlugin.setStatusTip(_("Download a plugin to add new features or change Anki\'s behaviour"))
        self.actionBuryFact.setText(_("&Bury Fact"))
        self.actionBuryFact.setStatusTip(_("Suspend the current fact until the deck is closed and opened again"))
        self.actionBuryFact.setShortcut(_("Ctrl+Shift+B"))

import icons_rc
